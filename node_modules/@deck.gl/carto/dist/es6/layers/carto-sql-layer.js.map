{"version":3,"sources":["../../../src/layers/carto-sql-layer.js"],"names":["CartoLayer","getMapsVersion","getTileJSON","CONNECTIONS","MAP_TYPES","defaultProps","bufferSize","tileExtent","uniqueIdProperty","CartoSQLLayer","updateTileJSON","data","credentials","props","version","isSQL","search","sql","mapConfig","buffersize","mvt","layers","type","options","trim","vector_extent","connection","CARTO","source","SQL","TABLE","Error","layerName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAkD,wBAAlD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,UAAU,EAAE,IAFO;AAGnBC,EAAAA,gBAAgB,EAAE;AAHC,CAArB;AAMA,eAAe,MAAMC,aAAN,SAA4BT,UAA5B,CAAuC;AACpD,QAAMU,cAAN,GAAuB;AACrB,UAAM;AAACC,MAAAA,IAAD;AAAOL,MAAAA,UAAP;AAAmBC,MAAAA,UAAnB;AAA+BK,MAAAA;AAA/B,QAA8C,KAAKC,KAAzD;AACA,UAAMC,OAAO,GAAGb,cAAc,CAACW,WAAD,CAA9B;AACA,UAAMG,KAAK,GAAGJ,IAAI,CAACK,MAAL,CAAY,GAAZ,IAAmB,CAAC,CAAlC;;AAEA,YAAQF,OAAR;AACE,WAAK,IAAL;AACE,cAAMG,GAAG,GAAGF,KAAK,GAAGJ,IAAH,2BAA2BA,IAA3B,CAAjB;AAGA,cAAMO,SAAS,GAAG;AAChBJ,UAAAA,OAAO,EAAE,OADO;AAEhBK,UAAAA,UAAU,EAAE;AACVC,YAAAA,GAAG,EAAEd;AADK,WAFI;AAKhBe,UAAAA,MAAM,EAAE,CACN;AACEC,YAAAA,IAAI,EAAE,QADR;AAEEC,YAAAA,OAAO,EAAE;AACPN,cAAAA,GAAG,EAAEA,GAAG,CAACO,IAAJ,EADE;AAEPC,cAAAA,aAAa,EAAElB;AAFR;AAFX,WADM;AALQ,SAAlB;AAgBA,eAAO,MAAML,WAAW,CAAC;AAACgB,UAAAA,SAAD;AAAYN,UAAAA;AAAZ,SAAD,CAAxB;;AAEF,WAAK,IAAL;AACE,eAAO,MAAMV,WAAW,CAAC;AACvBwB,UAAAA,UAAU,EAAEvB,WAAW,CAACwB,KADD;AAEvBC,UAAAA,MAAM,EAAEjB,IAFe;AAGvBW,UAAAA,IAAI,EAAEP,KAAK,GAAGX,SAAS,CAACyB,GAAb,GAAmBzB,SAAS,CAAC0B,KAHjB;AAIvBlB,UAAAA;AAJuB,SAAD,CAAxB;;AAOF;AACE,cAAM,IAAImB,KAAJ,yDAA2DjB,OAA3D,EAAN;AAhCJ;AAkCD;;AAxCmD;AA2CtDL,aAAa,CAACuB,SAAd,GAA0B,eAA1B;AACAvB,aAAa,CAACJ,YAAd,GAA6BA,YAA7B","sourcesContent":["import CartoLayer from './carto-layer';\nimport {getMapsVersion} from '../config';\nimport {getTileJSON, CONNECTIONS, MAP_TYPES} from '../api/maps-api-client';\n\nconst defaultProps = {\n  bufferSize: 16, // MVT buffersize in pixels,\n  tileExtent: 4096, // Tile extent in tile coordinate space (MVT spec.)\n  uniqueIdProperty: 'cartodb_id'\n};\n\nexport default class CartoSQLLayer extends CartoLayer {\n  async updateTileJSON() {\n    const {data, bufferSize, tileExtent, credentials} = this.props;\n    const version = getMapsVersion(credentials);\n    const isSQL = data.search(' ') > -1;\n\n    switch (version) {\n      case 'v1':\n        const sql = isSQL ? data : `SELECT * FROM ${data}`;\n\n        // Map config v1\n        const mapConfig = {\n          version: '1.3.1',\n          buffersize: {\n            mvt: bufferSize\n          },\n          layers: [\n            {\n              type: 'mapnik',\n              options: {\n                sql: sql.trim(),\n                vector_extent: tileExtent\n              }\n            }\n          ]\n        };\n\n        return await getTileJSON({mapConfig, credentials});\n\n      case 'v2':\n        return await getTileJSON({\n          connection: CONNECTIONS.CARTO,\n          source: data,\n          type: isSQL ? MAP_TYPES.SQL : MAP_TYPES.TABLE,\n          credentials\n        });\n\n      default:\n        throw new Error(`Cannot build MapConfig for unmatching version ${version}`);\n    }\n  }\n}\n\nCartoSQLLayer.layerName = 'CartoSQLLayer';\nCartoSQLLayer.defaultProps = defaultProps;\n"],"file":"carto-sql-layer.js"}