"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _cartoLayer = _interopRequireDefault(require("./carto-layer"));

var _mapsApiClient = require("../api/maps-api-client");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var CartoBQTilerLayer = function (_CartoLayer) {
  (0, _inherits2["default"])(CartoBQTilerLayer, _CartoLayer);

  var _super = _createSuper(CartoBQTilerLayer);

  function CartoBQTilerLayer() {
    (0, _classCallCheck2["default"])(this, CartoBQTilerLayer);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(CartoBQTilerLayer, [{
    key: "updateTileJSON",
    value: function () {
      var _updateTileJSON = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee() {
        var _this$props, credentials, data;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this$props = this.props, credentials = _this$props.credentials, data = _this$props.data;
                _context.next = 3;
                return (0, _mapsApiClient.getTileJSON)({
                  connection: _mapsApiClient.CONNECTIONS.BIGQUERY,
                  type: _mapsApiClient.MAP_TYPES.TILESET,
                  source: data,
                  credentials: credentials
                });

              case 3:
                return _context.abrupt("return", _context.sent);

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function updateTileJSON() {
        return _updateTileJSON.apply(this, arguments);
      }

      return updateTileJSON;
    }()
  }]);
  return CartoBQTilerLayer;
}(_cartoLayer["default"]);

exports["default"] = CartoBQTilerLayer;
CartoBQTilerLayer.layerName = 'CartoBQTilerLayer';
//# sourceMappingURL=carto-bqtiler-layer.js.map