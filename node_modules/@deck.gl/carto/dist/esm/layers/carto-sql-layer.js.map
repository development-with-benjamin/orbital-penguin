{"version":3,"sources":["../../../src/layers/carto-sql-layer.js"],"names":["CartoLayer","getMapsVersion","getTileJSON","CONNECTIONS","MAP_TYPES","defaultProps","bufferSize","tileExtent","uniqueIdProperty","CartoSQLLayer","props","data","credentials","version","isSQL","search","sql","mapConfig","buffersize","mvt","layers","type","options","trim","vector_extent","connection","CARTO","source","SQL","TABLE","Error","layerName"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAkD,wBAAlD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,UAAU,EAAE,IAFO;AAGnBC,EAAAA,gBAAgB,EAAE;AAHC,CAArB;;IAMqBC,a;;;;;;;;;;;;;;;;;;;;;8BAEmC,KAAKC,K,EAAlDC,I,eAAAA,I,EAAML,U,eAAAA,U,EAAYC,U,eAAAA,U,EAAYK,W,eAAAA,W;AAC/BC,gBAAAA,O,GAAUZ,cAAc,CAACW,WAAD,C;AACxBE,gBAAAA,K,GAAQH,IAAI,CAACI,MAAL,CAAY,GAAZ,IAAmB,CAAC,C;8BAE1BF,O;gDACD,I,uBAsBA,I;;;;AArBGG,gBAAAA,G,GAAMF,KAAK,GAAGH,IAAH,2BAA2BA,IAA3B,C;AAGXM,gBAAAA,S,GAAY;AAChBJ,kBAAAA,OAAO,EAAE,OADO;AAEhBK,kBAAAA,UAAU,EAAE;AACVC,oBAAAA,GAAG,EAAEb;AADK,mBAFI;AAKhBc,kBAAAA,MAAM,EAAE,CACN;AACEC,oBAAAA,IAAI,EAAE,QADR;AAEEC,oBAAAA,OAAO,EAAE;AACPN,sBAAAA,GAAG,EAAEA,GAAG,CAACO,IAAJ,EADE;AAEPC,sBAAAA,aAAa,EAAEjB;AAFR;AAFX,mBADM;AALQ,iB;;uBAgBLL,WAAW,CAAC;AAACe,kBAAAA,SAAS,EAATA,SAAD;AAAYL,kBAAAA,WAAW,EAAXA;AAAZ,iBAAD,C;;;;;;;uBAGXV,WAAW,CAAC;AACvBuB,kBAAAA,UAAU,EAAEtB,WAAW,CAACuB,KADD;AAEvBC,kBAAAA,MAAM,EAAEhB,IAFe;AAGvBU,kBAAAA,IAAI,EAAEP,KAAK,GAAGV,SAAS,CAACwB,GAAb,GAAmBxB,SAAS,CAACyB,KAHjB;AAIvBjB,kBAAAA,WAAW,EAAXA;AAJuB,iBAAD,C;;;;;;sBAQlB,IAAIkB,KAAJ,yDAA2DjB,OAA3D,E;;;;;;;;;;;;;;;;;;;EAtC6Bb,U;;SAAtBS,a;AA2CrBA,aAAa,CAACsB,SAAd,GAA0B,eAA1B;AACAtB,aAAa,CAACJ,YAAd,GAA6BA,YAA7B","sourcesContent":["import CartoLayer from './carto-layer';\nimport {getMapsVersion} from '../config';\nimport {getTileJSON, CONNECTIONS, MAP_TYPES} from '../api/maps-api-client';\n\nconst defaultProps = {\n  bufferSize: 16, // MVT buffersize in pixels,\n  tileExtent: 4096, // Tile extent in tile coordinate space (MVT spec.)\n  uniqueIdProperty: 'cartodb_id'\n};\n\nexport default class CartoSQLLayer extends CartoLayer {\n  async updateTileJSON() {\n    const {data, bufferSize, tileExtent, credentials} = this.props;\n    const version = getMapsVersion(credentials);\n    const isSQL = data.search(' ') > -1;\n\n    switch (version) {\n      case 'v1':\n        const sql = isSQL ? data : `SELECT * FROM ${data}`;\n\n        // Map config v1\n        const mapConfig = {\n          version: '1.3.1',\n          buffersize: {\n            mvt: bufferSize\n          },\n          layers: [\n            {\n              type: 'mapnik',\n              options: {\n                sql: sql.trim(),\n                vector_extent: tileExtent\n              }\n            }\n          ]\n        };\n\n        return await getTileJSON({mapConfig, credentials});\n\n      case 'v2':\n        return await getTileJSON({\n          connection: CONNECTIONS.CARTO,\n          source: data,\n          type: isSQL ? MAP_TYPES.SQL : MAP_TYPES.TABLE,\n          credentials\n        });\n\n      default:\n        throw new Error(`Cannot build MapConfig for unmatching version ${version}`);\n    }\n  }\n}\n\nCartoSQLLayer.layerName = 'CartoSQLLayer';\nCartoSQLLayer.defaultProps = defaultProps;\n"],"file":"carto-sql-layer.js"}