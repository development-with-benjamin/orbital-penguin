import _typeof from "@babel/runtime/helpers/esm/typeof";
var ALLOWED_ATTR_TYPES = Object.freeze(['function', 'string']);
export function getAttrValue(attr, d) {
  assert(_typeof(d) === 'object', 'Expected "data" to be an object');
  assert(ALLOWED_ATTR_TYPES.includes(_typeof(attr)), 'Expected "attr" to be a function or string');

  if (_typeof(attr) === ALLOWED_ATTR_TYPES[0]) {
    return attr(d);
  }

  if (_typeof(attr) === ALLOWED_ATTR_TYPES[1]) {
    return d.properties[attr];
  }

  return {};
}
export function assert(condition) {
  var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  if (!condition) {
    throw new Error("CARTO style error: ".concat(message));
  }
}
//# sourceMappingURL=utils.js.map