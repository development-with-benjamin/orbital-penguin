{"version":3,"sources":["../../../src/controllers/map-controller.js"],"names":["PITCH_MOUSE_THRESHOLD","PITCH_ACCEL","LINEAR_TRANSITION_PROPS","transitionDuration","transitionEasing","t","transitionInterpolator","LinearInterpolator","transitionInterruption","TRANSITION_EVENTS","BREAK","DEFAULT_STATE","pitch","bearing","altitude","minZoom","maxZoom","minPitch","maxPitch","MapState","makeViewport","width","height","latitude","longitude","zoom","startPanLngLat","startZoomLngLat","startRotatePos","startBearing","startPitch","startZoom","Number","isFinite","_state","pos","_getUpdatedState","_unproject","startPos","_calculateNewLngLat","_viewportProps","deltaAngleX","deltaAngleY","newRotation","_calculateNewPitchAndBearing","_getRotationParams","scale","_calculateNewZoom","zoomedViewport","getMapCenterByLngLatPosition","lngLat","speed","_zoomFromCenter","_panFromCenter","viewState","fromProps","getViewportProps","props","Object","assign","Math","abs","offset","pan","newProps","constructor","viewport","unproject","log2","deltaScaleX","deltaScaleY","deltaX","deltaY","centerY","startY","min","max","ViewState","MapController","dragMode","opts","controllerState","Controller"],"mappings":"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","sourcesContent":["import {clamp} from 'math.gl';\nimport Controller from './controller';\nimport ViewState from './view-state';\nimport {normalizeViewportProps} from '@math.gl/web-mercator';\nimport assert from '../utils/assert';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport {TRANSITION_EVENTS} from './transition-manager';\n\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\n\nconst LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\n\nconst DEFAULT_STATE = {\n  pitch: 0,\n  bearing: 0,\n  altitude: 1.5,\n  minZoom: 0,\n  maxZoom: 20,\n  minPitch: 0,\n  maxPitch: 60\n};\n\n/* Utils */\n\nexport class MapState extends ViewState {\n  constructor({\n    makeViewport,\n\n    /** Mapbox viewport properties */\n    /** The width of the viewport */\n    width,\n    /** The height of the viewport */\n    height,\n    /** The latitude at the center of the viewport */\n    latitude,\n    /** The longitude at the center of the viewport */\n    longitude,\n    /** The tile zoom level of the map. */\n    zoom,\n    /** The bearing of the viewport in degrees */\n    bearing = DEFAULT_STATE.bearing,\n    /** The pitch of the viewport in degrees */\n    pitch = DEFAULT_STATE.pitch,\n    /**\n     * Specify the altitude of the viewport camera\n     * Unit: map heights, default 1.5\n     * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n     */\n    altitude = DEFAULT_STATE.altitude,\n\n    /** Viewport constraints */\n    maxZoom = DEFAULT_STATE.maxZoom,\n    minZoom = DEFAULT_STATE.minZoom,\n    maxPitch = DEFAULT_STATE.maxPitch,\n    minPitch = DEFAULT_STATE.minPitch,\n\n    /** Interaction states, required to calculate change during transform */\n    /* The point on map being grabbed when the operation first started */\n    startPanLngLat,\n    /* Center of the zoom when the operation first started */\n    startZoomLngLat,\n    /* Pointer position when rotation started */\n    startRotatePos,\n    /** Bearing when current perspective rotate operation started */\n    startBearing,\n    /** Pitch when current perspective rotate operation started */\n    startPitch,\n    /** Zoom when current zoom operation started */\n    startZoom\n  } = {}) {\n    assert(Number.isFinite(longitude), '`longitude` must be supplied');\n    assert(Number.isFinite(latitude), '`latitude` must be supplied');\n    assert(Number.isFinite(zoom), '`zoom` must be supplied');\n\n    super({\n      width,\n      height,\n      latitude,\n      longitude,\n      zoom,\n      bearing,\n      pitch,\n      altitude,\n      maxZoom,\n      minZoom,\n      maxPitch,\n      minPitch\n    });\n\n    this._state = {\n      startPanLngLat,\n      startZoomLngLat,\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoom\n    };\n\n    this.makeViewport = makeViewport;\n  }\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart({pos}) {\n    return this._getUpdatedState({\n      startPanLngLat: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   * @param {[Number, Number], optional} startPos - where the pointer grabbed at\n   *   the start of the operation. Must be supplied of `panStart()` was not called\n   */\n  pan({pos, startPos}) {\n    const startPanLngLat = this._state.startPanLngLat || this._unproject(startPos);\n\n    if (!startPanLngLat) {\n      return this;\n    }\n\n    const [longitude, latitude] = this._calculateNewLngLat({startPanLngLat, pos});\n\n    return this._getUpdatedState({\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd() {\n    return this._getUpdatedState({\n      startPanLngLat: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  rotateStart({pos}) {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startBearing: this._viewportProps.bearing,\n      startPitch: this._viewportProps.pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  rotate({pos, deltaAngleX = 0, deltaAngleY = 0}) {\n    const {startRotatePos, startBearing, startPitch} = this._state;\n\n    if (!startRotatePos || !Number.isFinite(startBearing) || !Number.isFinite(startPitch)) {\n      return this;\n    }\n    let newRotation;\n    if (pos) {\n      newRotation = this._calculateNewPitchAndBearing({\n        ...this._getRotationParams(pos, startRotatePos),\n        startBearing,\n        startPitch\n      });\n    } else {\n      newRotation = {\n        bearing: startBearing + deltaAngleX,\n        pitch: startPitch + deltaAngleY\n      };\n    }\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd() {\n    return this._getUpdatedState({\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  zoomStart({pos}) {\n    return this._getUpdatedState({\n      startZoomLngLat: this._unproject(pos),\n      startZoom: this._viewportProps.zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({pos, startPos, scale}) {\n    // Make sure we zoom around the current mouse position rather than map center\n    let {startZoom, startZoomLngLat} = this._state;\n\n    if (!Number.isFinite(startZoom)) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this._viewportProps.zoom;\n      startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n    }\n\n    const zoom = this._calculateNewZoom({scale, startZoom});\n\n    const zoomedViewport = this.makeViewport({...this._viewportProps, zoom});\n    const [longitude, latitude] = zoomedViewport.getMapCenterByLngLatPosition({\n      lngLat: startZoomLngLat,\n      pos\n    });\n\n    return this._getUpdatedState({\n      zoom,\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd() {\n    return this._getUpdatedState({\n      startZoomLngLat: null,\n      startZoom: null\n    });\n  }\n\n  zoomIn(speed = 2) {\n    return this._zoomFromCenter(speed);\n  }\n\n  zoomOut(speed = 2) {\n    return this._zoomFromCenter(1 / speed);\n  }\n\n  moveLeft(speed = 100) {\n    return this._panFromCenter([speed, 0]);\n  }\n\n  moveRight(speed = 100) {\n    return this._panFromCenter([-speed, 0]);\n  }\n\n  moveUp(speed = 100) {\n    return this._panFromCenter([0, speed]);\n  }\n\n  moveDown(speed = 100) {\n    return this._panFromCenter([0, -speed]);\n  }\n\n  rotateLeft(speed = 15) {\n    return this._getUpdatedState({\n      bearing: this._viewportProps.bearing - speed\n    });\n  }\n\n  rotateRight(speed = 15) {\n    return this._getUpdatedState({\n      bearing: this._viewportProps.bearing + speed\n    });\n  }\n\n  rotateUp(speed = 10) {\n    return this._getUpdatedState({\n      pitch: this._viewportProps.pitch + speed\n    });\n  }\n\n  rotateDown(speed = 10) {\n    return this._getUpdatedState({\n      pitch: this._viewportProps.pitch - speed\n    });\n  }\n\n  shortestPathFrom(viewState) {\n    // const endViewStateProps = new this.ControllerState(endProps).shortestPathFrom(startViewstate);\n    const fromProps = viewState.getViewportProps();\n    const props = Object.assign({}, this._viewportProps);\n    const {bearing, longitude} = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n    if (Math.abs(longitude - fromProps.longitude) > 180) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n    return props;\n  }\n\n  /* Private methods */\n\n  _zoomFromCenter(scale) {\n    const {width, height} = this._viewportProps;\n    return this.zoom({\n      pos: [width / 2, height / 2],\n      scale\n    });\n  }\n\n  _panFromCenter(offset) {\n    const {width, height} = this._viewportProps;\n    return this.pan({\n      startPos: [width / 2, height / 2],\n      pos: [width / 2 + offset[0], height / 2 + offset[1]]\n    });\n  }\n\n  _getUpdatedState(newProps) {\n    // Update _viewportProps\n    return new this.constructor({\n      makeViewport: this.makeViewport,\n      ...this._viewportProps,\n      ...this._state,\n      ...newProps\n    });\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    // Ensure pitch is within specified range\n    const {maxPitch, minPitch, pitch} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    Object.assign(props, normalizeViewportProps(props));\n\n    return props;\n  }\n\n  _unproject(pos) {\n    const viewport = this.makeViewport(this._viewportProps);\n    return pos && viewport.unproject(pos);\n  }\n\n  // Calculate a new lnglat based on pixel dragging position\n  _calculateNewLngLat({startPanLngLat, pos}) {\n    const viewport = this.makeViewport(this._viewportProps);\n    return viewport.getMapCenterByLngLatPosition({lngLat: startPanLngLat, pos});\n  }\n\n  // Calculates new zoom\n  _calculateNewZoom({scale, startZoom}) {\n    const {maxZoom, minZoom} = this._viewportProps;\n    const zoom = startZoom + Math.log2(scale);\n    return clamp(zoom, minZoom, maxZoom);\n  }\n\n  // Calculates a new pitch and bearing from a position (coming from an event)\n  _calculateNewPitchAndBearing({deltaScaleX, deltaScaleY, startBearing, startPitch}) {\n    // clamp deltaScaleY to [-1, 1] so that rotation is constrained between minPitch and maxPitch.\n    // deltaScaleX does not need to be clamped as bearing does not have constraints.\n    deltaScaleY = clamp(deltaScaleY, -1, 1);\n\n    const {minPitch, maxPitch} = this._viewportProps;\n\n    const bearing = startBearing + 180 * deltaScaleX;\n    let pitch = startPitch;\n    if (deltaScaleY > 0) {\n      // Gradually increase pitch\n      pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n    } else if (deltaScaleY < 0) {\n      // Gradually decrease pitch\n      pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n    }\n\n    return {\n      pitch,\n      bearing\n    };\n  }\n\n  _getRotationParams(pos, startPos) {\n    const deltaX = pos[0] - startPos[0];\n    const deltaY = pos[1] - startPos[1];\n    const centerY = pos[1];\n    const startY = startPos[1];\n    const {width, height} = this._viewportProps;\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = (deltaY / (startY - height)) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    deltaScaleY = Math.min(1, Math.max(-1, deltaScaleY));\n    return {deltaScaleX, deltaScaleY};\n  }\n}\n\nexport default class MapController extends Controller {\n  constructor(props) {\n    props.dragMode = props.dragMode || 'pan';\n    super(MapState, props);\n  }\n\n  _getTransitionProps(opts) {\n    // Enables Transitions on double-tap and key-down events.\n    return opts\n      ? {\n          ...LINEAR_TRANSITION_PROPS,\n          transitionInterpolator: new LinearInterpolator({\n            ...opts,\n            makeViewport: this.controllerState.makeViewport\n          })\n        }\n      : LINEAR_TRANSITION_PROPS;\n  }\n}\n"],"file":"map-controller.js"}