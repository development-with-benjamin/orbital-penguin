{"version":3,"sources":["../../../src/controllers/view-state.js"],"names":["ViewState","opts","Number","isFinite","width","height","_viewportProps","_applyConstraints","_state","viewState","props"],"mappings":";;;;;;;;;;;;;AAAA;;IAIqBA,S;AACnB,qBAAYC,IAAZ,EAAkB;AAAA;AAChB,4BAAOC,MAAM,CAACC,QAAP,CAAgBF,IAAI,CAACG,KAArB,CAAP,EAAoC,0BAApC;AACA,4BAAOF,MAAM,CAACC,QAAP,CAAgBF,IAAI,CAACI,MAArB,CAAP,EAAqC,2BAArC;AAEA,SAAKC,cAAL,GAAsB,KAAKC,iBAAL,CAAuBN,IAAvB,CAAtB;AACD;;;;uCAEkB;AACjB,aAAO,KAAKK,cAAZ;AACD;;;+BAEU;AACT,aAAO,KAAKE,MAAZ;AACD;;;qCAEgBC,S,EAAW;AAC1B,aAAO,KAAKH,cAAZ;AACD;;;sCAIiBI,K,EAAO;AACvB,aAAOA,KAAP;AACD","sourcesContent":["import assert from '../utils/assert';\n\n/* Helpers */\n\nexport default class ViewState {\n  constructor(opts) {\n    assert(Number.isFinite(opts.width), '`width` must be supplied');\n    assert(Number.isFinite(opts.height), '`height` must be supplied');\n\n    this._viewportProps = this._applyConstraints(opts);\n  }\n\n  getViewportProps() {\n    return this._viewportProps;\n  }\n\n  getState() {\n    return this._state;\n  }\n\n  shortestPathFrom(viewState) {\n    return this._viewportProps;\n  }\n\n  // Redefined by subclass\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    return props;\n  }\n}\n"],"file":"view-state.js"}