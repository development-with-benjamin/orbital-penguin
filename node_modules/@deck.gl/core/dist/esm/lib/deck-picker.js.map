{"version":3,"sources":["../../../src/lib/deck-picker.js"],"names":["Framebuffer","Texture2D","isWebGL2","readPixelsToArray","cssToDeviceRatio","cssToDevicePixels","assert","log","PickLayersPass","getClosestObject","getUniqueObjects","processPickInfo","getLayerPickingInfo","getEmptyPickingInfo","DeckPicker","gl","pickingFBO","pickLayersPass","layerFilter","lastPickedInfo","index","layerId","info","_onError","props","onError","_pickable","depthFBO","color","opts","_pickClosestObject","_pickVisibleObjects","x","y","layers","viewports","lastPickedLayerId","layer","id","lastPickedViewportId","viewport","find","l","v","coordinate","unproject","Object","assign","object","isSupported","colorBufferFloat","attach","format","type","resize","width","canvas","height","pickableLayers","filter","isPickable","isComposite","length","warn","slice","views","radius","depth","mode","unproject3D","onViewportActive","_getPickable","result","emptyInfo","_resizeBuffer","pixelRatio","devicePixelRange","devicePixel","Math","floor","deviceRadius","round","deviceRect","_getPickingRect","deviceX","deviceY","deviceWidth","deviceHeight","infos","affectedLayers","i","pickedColors","_drawAndSample","pass","redrawReason","pickInfo","z","pickedLayer","zValues","pickedX","pickedY","pickZ","distanceScales","metersPerUnit","position","pickedColor","disablePickingIndex","pickedObjectIndex","values","push","restorePickingColors","get","maxObjects","leftTop","deviceLeft","deviceTop","rightBottom","deviceRight","deviceBottom","pickInfos","uniqueInfos","Map","isMaxObjects","Number","isFinite","size","picked","has","set","Array","from","render","Float32Array","Uint8Array","sourceX","sourceY","sourceWidth","sourceHeight","target","max","min"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Framebuffer,\n  Texture2D,\n  isWebGL2,\n  readPixelsToArray,\n  cssToDeviceRatio,\n  cssToDevicePixels\n} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport assert from '../utils/assert';\nimport log from '../utils/log';\nimport PickLayersPass from '../passes/pick-layers-pass';\nimport {getClosestObject, getUniqueObjects} from './picking/query-object';\nimport {processPickInfo, getLayerPickingInfo, getEmptyPickingInfo} from './picking/pick-info';\n\nexport default class DeckPicker {\n  constructor(gl) {\n    this.gl = gl;\n    this.pickingFBO = null;\n    this.pickLayersPass = new PickLayersPass(gl);\n    this.layerFilter = null;\n    this.lastPickedInfo = {\n      // For callback tracking and auto highlight\n      index: -1,\n      layerId: null,\n      info: null\n    };\n    this._onError = null;\n  }\n\n  setProps(props) {\n    if ('layerFilter' in props) {\n      this.layerFilter = props.layerFilter;\n    }\n\n    if ('onError' in props) {\n      this._onError = props.onError;\n    }\n\n    if ('_pickable' in props) {\n      this._pickable = props._pickable;\n    }\n  }\n\n  finalize() {\n    if (this.pickingFBO) {\n      this.pickingFBO.delete();\n    }\n    if (this.depthFBO) {\n      this.depthFBO.color.delete();\n      this.depthFBO.delete();\n    }\n  }\n\n  // Pick the closest info at given coordinate\n  pickObject(opts) {\n    return this._pickClosestObject(opts);\n  }\n\n  // Get all unique infos within a bounding box\n  pickObjects(opts) {\n    return this._pickVisibleObjects(opts);\n  }\n\n  // Returns a new picking info object by assuming the last picked object is still picked\n  getLastPickedObject({x, y, layers, viewports}, lastPickedInfo = this.lastPickedInfo.info) {\n    const lastPickedLayerId = lastPickedInfo && lastPickedInfo.layer && lastPickedInfo.layer.id;\n    const lastPickedViewportId =\n      lastPickedInfo && lastPickedInfo.viewport && lastPickedInfo.viewport.id;\n    const layer = lastPickedLayerId ? layers.find(l => l.id === lastPickedLayerId) : null;\n    const viewport =\n      (lastPickedViewportId && viewports.find(v => v.id === lastPickedViewportId)) || viewports[0];\n    const coordinate = viewport && viewport.unproject([x - viewport.x, y - viewport.y]);\n\n    const info = {\n      x,\n      y,\n      viewport,\n      coordinate,\n      layer\n    };\n\n    if (layer) {\n      return Object.assign({}, lastPickedInfo, info);\n    }\n    return Object.assign(info, {color: null, object: null, index: -1});\n  }\n\n  // Private\n  _resizeBuffer() {\n    const {gl} = this;\n\n    // Create a frame buffer if not already available\n    if (!this.pickingFBO) {\n      this.pickingFBO = new Framebuffer(gl);\n      if (Framebuffer.isSupported(gl, {colorBufferFloat: true})) {\n        this.depthFBO = new Framebuffer(gl);\n        this.depthFBO.attach({\n          [GL.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n            format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n            type: GL.FLOAT\n          })\n        });\n      }\n    }\n    // Resize it to current canvas size (this is a noop if size hasn't changed)\n    this.pickingFBO.resize({width: gl.canvas.width, height: gl.canvas.height});\n    if (this.depthFBO) {\n      this.depthFBO.resize({width: gl.canvas.width, height: gl.canvas.height});\n    }\n    return this.pickingFBO;\n  }\n\n  // picking can only handle up to 255 layers. Drop non-pickable/invisible layers from the list.\n  _getPickable(layers) {\n    if (this._pickable === false) {\n      return null;\n    }\n    const pickableLayers = layers.filter(layer => layer.isPickable() && !layer.isComposite);\n    if (pickableLayers.length > 255) {\n      log.warn('Too many pickable layers, only picking the first 255')();\n      return pickableLayers.slice(0, 255);\n    }\n    return pickableLayers.length ? pickableLayers : null;\n  }\n\n  // Pick the closest object at the given (x,y) coordinate\n  // eslint-disable-next-line max-statements,complexity\n  _pickClosestObject({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    radius = 0,\n    depth = 1,\n    mode = 'query',\n    unproject3D,\n    onViewportActive\n  }) {\n    layers = this._getPickable(layers);\n\n    if (!layers) {\n      return {\n        result: [],\n        emptyInfo: getEmptyPickingInfo({viewports, x, y})\n      };\n    }\n\n    this._resizeBuffer();\n\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // Top-left coordinates [x, y] to bottom-left coordinates [deviceX, deviceY]\n    // And compensate for pixelRatio\n    const pixelRatio = cssToDeviceRatio(this.gl);\n    const devicePixelRange = cssToDevicePixels(this.gl, [x, y], true);\n    const devicePixel = [\n      devicePixelRange.x + Math.floor(devicePixelRange.width / 2),\n      devicePixelRange.y + Math.floor(devicePixelRange.height / 2)\n    ];\n\n    const deviceRadius = Math.round(radius * pixelRatio);\n    const {width, height} = this.pickingFBO;\n    const deviceRect = this._getPickingRect({\n      deviceX: devicePixel[0],\n      deviceY: devicePixel[1],\n      deviceRadius,\n      deviceWidth: width,\n      deviceHeight: height\n    });\n\n    let infos;\n    const result = [];\n    const affectedLayers = {};\n\n    for (let i = 0; i < depth; i++) {\n      const pickedColors =\n        deviceRect &&\n        this._drawAndSample({\n          layers,\n          views,\n          viewports,\n          onViewportActive,\n          deviceRect,\n          pass: `picking:${mode}`,\n          redrawReason: mode\n        });\n\n      const pickInfo = getClosestObject({\n        pickedColors,\n        layers,\n        deviceX: devicePixel[0],\n        deviceY: devicePixel[1],\n        deviceRadius,\n        deviceRect\n      });\n\n      let z;\n      if (pickInfo.pickedLayer && unproject3D && this.depthFBO) {\n        const zValues = this._drawAndSample({\n          layers: [pickInfo.pickedLayer],\n          views,\n          viewports,\n          onViewportActive,\n          deviceRect: {x: pickInfo.pickedX, y: pickInfo.pickedY, width: 1, height: 1},\n          pass: `picking:${mode}`,\n          redrawReason: 'pick-z',\n          pickZ: true\n        });\n        // picked value is in common space (pixels) from the camera target (viewport.position)\n        // convert it to meters from the ground\n        z = zValues[0] * viewports[0].distanceScales.metersPerUnit[2] + viewports[0].position[2];\n      }\n\n      // Only exclude if we need to run picking again.\n      // We need to run picking again if an object is detected AND\n      // we have not exhausted the requested depth.\n      if (pickInfo.pickedColor && i + 1 < depth) {\n        const layerId = pickInfo.pickedColor[3] - 1;\n        affectedLayers[layerId] = true;\n        layers[layerId].disablePickingIndex(pickInfo.pickedObjectIndex);\n      }\n\n      // This logic needs to run even if no object is picked.\n      infos = processPickInfo({\n        pickInfo,\n        lastPickedInfo: this.lastPickedInfo,\n        mode,\n        layers,\n        layerFilter: this.layerFilter,\n        viewports,\n        x,\n        y,\n        z,\n        pixelRatio\n      });\n\n      for (const info of infos.values()) {\n        if (info.layer) {\n          result.push(info);\n        }\n      }\n\n      // If no object is picked stop.\n      if (!pickInfo.pickedColor) {\n        break;\n      }\n    }\n\n    // reset only affected buffers\n    for (const layerId in affectedLayers) {\n      layers[layerId].restorePickingColors();\n    }\n\n    return {result, emptyInfo: infos && infos.get(null)};\n  }\n\n  // Pick all objects within the given bounding box\n  _pickVisibleObjects({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    width = 1,\n    height = 1,\n    mode = 'query',\n    maxObjects = null,\n    onViewportActive\n  }) {\n    layers = this._getPickable(layers);\n\n    if (!layers) {\n      return [];\n    }\n\n    this._resizeBuffer();\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // And compensate for pixelRatio\n    const pixelRatio = cssToDeviceRatio(this.gl);\n    const leftTop = cssToDevicePixels(this.gl, [x, y], true);\n\n    // take left and top (y inverted in device pixels) from start location\n    const deviceLeft = leftTop.x;\n    const deviceTop = leftTop.y + leftTop.height;\n\n    // take right and bottom (y inverted in device pixels) from end location\n    const rightBottom = cssToDevicePixels(this.gl, [x + width, y + height], true);\n    const deviceRight = rightBottom.x + rightBottom.width;\n    const deviceBottom = rightBottom.y;\n\n    const deviceRect = {\n      x: deviceLeft,\n      y: deviceBottom,\n      // deviceTop and deviceRight represent the first pixel outside the desired rect\n      width: deviceRight - deviceLeft,\n      height: deviceTop - deviceBottom\n    };\n\n    const pickedColors = this._drawAndSample({\n      layers,\n      views,\n      viewports,\n      onViewportActive,\n      deviceRect,\n      pass: `picking:${mode}`,\n      redrawReason: mode\n    });\n\n    const pickInfos = getUniqueObjects({pickedColors, layers});\n\n    // Only return unique infos, identified by info.object\n    const uniqueInfos = new Map();\n\n    const isMaxObjects = Number.isFinite(maxObjects);\n\n    for (let i = 0; i < pickInfos.length; i++) {\n      if (isMaxObjects && uniqueInfos.size >= maxObjects) {\n        break;\n      }\n      const pickInfo = pickInfos[i];\n      let info = {\n        color: pickInfo.pickedColor,\n        layer: null,\n        index: pickInfo.pickedObjectIndex,\n        picked: true,\n        x,\n        y,\n        width,\n        height,\n        pixelRatio\n      };\n\n      info = getLayerPickingInfo({layer: pickInfo.pickedLayer, info, mode});\n      if (!uniqueInfos.has(info.object)) {\n        uniqueInfos.set(info.object, info);\n      }\n    }\n\n    return Array.from(uniqueInfos.values());\n  }\n\n  // returns pickedColor or null if no pickable layers found.\n  _drawAndSample({\n    layers,\n    views,\n    viewports,\n    onViewportActive,\n    deviceRect,\n    pass,\n    redrawReason,\n    pickZ\n  }) {\n    assert(deviceRect.width > 0 && deviceRect.height > 0);\n\n    if (layers.length < 1) {\n      return null;\n    }\n\n    const pickingFBO = pickZ ? this.depthFBO : this.pickingFBO;\n\n    this.pickLayersPass.render({\n      layers,\n      layerFilter: this.layerFilter,\n      onError: this._onError,\n      views,\n      viewports,\n      onViewportActive,\n      pickingFBO,\n      deviceRect,\n      pass,\n      redrawReason,\n      pickZ\n    });\n\n    // Read from an already rendered picking buffer\n    // Returns an Uint8ClampedArray of picked pixels\n    const {x, y, width, height} = deviceRect;\n    const pickedColors = new (pickZ ? Float32Array : Uint8Array)(width * height * 4);\n    readPixelsToArray(pickingFBO, {\n      sourceX: x,\n      sourceY: y,\n      sourceWidth: width,\n      sourceHeight: height,\n      target: pickedColors\n    });\n\n    return pickedColors;\n  }\n\n  // Calculate a picking rect centered on deviceX and deviceY and clipped to device\n  // Returns null if pixel is outside of device\n  _getPickingRect({deviceX, deviceY, deviceRadius, deviceWidth, deviceHeight}) {\n    // Create a box of size `radius * 2 + 1` centered at [deviceX, deviceY]\n    const x = Math.max(0, deviceX - deviceRadius);\n    const y = Math.max(0, deviceY - deviceRadius);\n    const width = Math.min(deviceWidth, deviceX + deviceRadius + 1) - x;\n    const height = Math.min(deviceHeight, deviceY + deviceRadius + 1) - y;\n\n    // x, y out of bounds.\n    if (width <= 0 || height <= 0) {\n      return null;\n    }\n\n    return {x, y, width, height};\n  }\n}\n"],"file":"deck-picker.js"}