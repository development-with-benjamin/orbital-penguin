{"version":3,"sources":["../../../../src/effects/lighting/sun-light.js"],"names":["DirectionalLight","getSunlightDirection","SunLight","timestamp","others","layer","viewport","context","isGlobe","resolution","x","y","z","direction","latitude","longitude"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,gBAAR,QAA+B,qBAA/B;AACA,SAAQC,oBAAR,QAAmC,WAAnC;;IAEqBC,Q;;;;;AACnB,0BAAoC;AAAA;;AAAA,QAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,QAATC,MAAS;;AAAA;;AAClC,8BAAMA,MAAN;AAEA,UAAKD,SAAL,GAAiBA,SAAjB;AAHkC;AAInC;;;;6CAE0B;AAAA,UAARE,KAAQ,SAARA,KAAQ;AAAA,UAClBC,QADkB,GACND,KAAK,CAACE,OADA,CAClBD,QADkB;AAEzB,UAAME,OAAO,GAAGF,QAAQ,CAACG,UAAT,GAAsB,CAAtC;;AAEA,UAAID,OAAJ,EAAa;AAAA,oCAEOP,oBAAoB,CAAC,KAAKE,SAAN,EAAiB,CAAjB,EAAoB,CAApB,CAF3B;AAAA;AAAA,YAEJO,CAFI;AAAA,YAEDC,CAFC;AAAA,YAEEC,CAFF;;AAGX,aAAKC,SAAL,GAAiB,CAACH,CAAD,EAAI,CAACE,CAAL,EAAQD,CAAR,CAAjB;AACD,OAJD,MAIO;AAAA,YACEG,QADF,GACyBR,QADzB,CACEQ,QADF;AAAA,YACYC,SADZ,GACyBT,QADzB,CACYS,SADZ;AAEL,aAAKF,SAAL,GAAiBZ,oBAAoB,CAAC,KAAKE,SAAN,EAAiBW,QAAjB,EAA2BC,SAA3B,CAArC;AACD;;AAED,aAAO,IAAP;AACD;;;;EArBmCf,gB;;SAAjBE,Q","sourcesContent":["import {DirectionalLight} from './directional-light';\nimport {getSunlightDirection} from './suncalc';\n\nexport default class SunLight extends DirectionalLight {\n  constructor({timestamp, ...others}) {\n    super(others);\n\n    this.timestamp = timestamp;\n  }\n\n  getProjectedLight({layer}) {\n    const {viewport} = layer.context;\n    const isGlobe = viewport.resolution > 0;\n\n    if (isGlobe) {\n      // Rotate vector to align with the direction of the globe projection (up at lon:0,lat:0 is [0, -1, 0])\n      const [x, y, z] = getSunlightDirection(this.timestamp, 0, 0);\n      this.direction = [x, -z, y];\n    } else {\n      const {latitude, longitude} = viewport;\n      this.direction = getSunlightDirection(this.timestamp, latitude, longitude);\n    }\n\n    return this;\n  }\n}\n"],"file":"sun-light.js"}