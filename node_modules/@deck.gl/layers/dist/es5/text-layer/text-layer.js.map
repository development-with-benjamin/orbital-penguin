{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["DEFAULT_FONT_SETTINGS","fontSize","DEFAULT_FONT_SIZE","buffer","DEFAULT_BUFFER","sdf","radius","DEFAULT_RADIUS","cutoff","DEFAULT_CUTOFF","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_COLOR","DEFAULT_LINE_HEIGHT","FONT_SETTINGS_PROPS","defaultProps","billboard","sizeScale","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","backgroundColor","type","value","optional","characterSet","DEFAULT_CHAR_SET","fontFamily","DEFAULT_FONT_FAMILY","fontWeight","DEFAULT_FONT_WEIGHT","lineHeight","fontSettings","wordBreak","maxWidth","getText","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","TextLayer","state","styleVersion","fontAtlasManager","FontAtlasManager","props","oldProps","changeFlags","fontChanged","_fontChanged","_updateFontAtlas","styleChanged","textChanged","dataChanged","updateTriggersChanged","all","_updateText","setState","info","Object","assign","object","index","data","setProps","setNeedsRedraw","oldFontSettings","some","prop","textBuffer","attributes","startIndices","numInstances","ArrayBuffer","isView","length","texts","characterCount","_","iterable","objectInfo","Array","from","push","iconMapping","mapping","paragraph","y","rowWidth","size","width","height","anchorX","anchorY","numCharacters","offsets","i","rowOffset","scale","texture","_dataDiff","transitions","updateTriggers","getIconOffsets","bind","SubLayerClass","getSubLayerClass","MultiIconLayer","iconAtlas","getSubLayerProps","id","getIcon","CompositeLayer","layerName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAoBA;;AACA;;AACA;;AASA;;;;;;;;;;;;;;;;AAEA,IAAMA,qBAAqB,GAAG;AAC5BC,EAAAA,QAAQ,EAAEC,mCADkB;AAE5BC,EAAAA,MAAM,EAAEC,gCAFoB;AAG5BC,EAAAA,GAAG,EAAE,KAHuB;AAI5BC,EAAAA,MAAM,EAAEC,gCAJoB;AAK5BC,EAAAA,MAAM,EAAEC;AALoB,CAA9B;AAQA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,CADW;AAElBC,EAAAA,MAAM,EAAE,CAFU;AAGlBC,EAAAA,GAAG,EAAE,CAAC;AAHY,CAApB;AAMA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,GAAG,EAAE,CADoB;AAEzBC,EAAAA,MAAM,EAAE,CAFiB;AAGzBC,EAAAA,MAAM,EAAE,CAAC;AAHgB,CAA3B;AAMA,IAAMC,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAAtB;AAEA,IAAMC,mBAAmB,GAAG,GAA5B;AAEA,IAAMC,mBAAmB,GAAG,CAAC,UAAD,EAAa,QAAb,EAAuB,KAAvB,EAA8B,QAA9B,EAAwC,QAAxC,CAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,IADQ;AAEnBC,EAAAA,SAAS,EAAE,CAFQ;AAGnBC,EAAAA,SAAS,EAAE,QAHQ;AAInBC,EAAAA,aAAa,EAAE,CAJI;AAKnBC,EAAAA,aAAa,EAAEC,MAAM,CAACC,gBALH;AAMnBC,EAAAA,eAAe,EAAE;AAACC,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE,IAAvB;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GANE;AAQnBC,EAAAA,YAAY,EAAEC,kCARK;AASnBC,EAAAA,UAAU,EAAEC,qCATO;AAUnBC,EAAAA,UAAU,EAAEC,qCAVO;AAWnBC,EAAAA,UAAU,EAAEpB,mBAXO;AAYnBqB,EAAAA,YAAY,EAAE,EAZK;AAenBC,EAAAA,SAAS,EAAE,YAfQ;AAgBnBC,EAAAA,QAAQ,EAAE;AAACZ,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE,CAAC;AAAzB,GAhBS;AAkBnBY,EAAAA,OAAO,EAAE;AAACb,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAa,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAN;AAAA;AAA3B,GAlBU;AAmBnBC,EAAAA,WAAW,EAAE;AAAChB,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAa,CAAC;AAAA,aAAIA,CAAC,CAACG,QAAN;AAAA;AAA3B,GAnBM;AAoBnBC,EAAAA,QAAQ,EAAE;AAAClB,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAEb;AAA1B,GApBS;AAqBnB+B,EAAAA,OAAO,EAAE;AAACnB,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GArBU;AAsBnBmB,EAAAA,QAAQ,EAAE;AAACpB,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAtBS;AAuBnBoB,EAAAA,aAAa,EAAE;AAACrB,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAvBI;AAwBnBqB,EAAAA,oBAAoB,EAAE;AAACtB,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAxBH;AAyBnBsB,EAAAA,cAAc,EAAE;AAACvB,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAA1B;AAzBG,CAArB;;IA4BqBuB,S;;;;;;;;;;;;sCACD;AAChB,WAAKC,KAAL,GAAa;AACXC,QAAAA,YAAY,EAAE,CADH;AAEXC,QAAAA,gBAAgB,EAAE,IAAIC,4BAAJ;AAFP,OAAb;AAID;;;sCAG2C;AAAA,UAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,UAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,UAAdC,WAAc,QAAdA,WAAc;;AAC1C,UAAMC,WAAW,GAAG,KAAKC,YAAL,CAAkBH,QAAlB,EAA4BD,KAA5B,CAApB;;AAEA,UAAIG,WAAJ,EAAiB;AACf,aAAKE,gBAAL,CAAsBJ,QAAtB,EAAgCD,KAAhC;AACD;;AAED,UAAMM,YAAY,GAChBH,WAAW,IACXH,KAAK,CAACpB,UAAN,KAAqBqB,QAAQ,CAACrB,UAD9B,IAEAoB,KAAK,CAAClB,SAAN,KAAoBmB,QAAQ,CAACnB,SAF7B,IAGAkB,KAAK,CAACjB,QAAN,KAAmBkB,QAAQ,CAAClB,QAJ9B;AAMA,UAAMwB,WAAW,GACfL,WAAW,CAACM,WAAZ,IACCN,WAAW,CAACO,qBAAZ,KACEP,WAAW,CAACO,qBAAZ,CAAkCC,GAAlC,IAAyCR,WAAW,CAACO,qBAAZ,CAAkCzB,OAD7E,CAFH;;AAKA,UAAIuB,WAAJ,EAAiB;AACf,aAAKI,WAAL;AACD;;AACD,UAAIL,YAAJ,EAAkB;AAChB,aAAKM,QAAL,CAAc;AACZf,UAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,GAA0B;AAD5B,SAAd;AAGD;AACF;;;0CAEsB;AAAA,UAAPgB,IAAO,SAAPA,IAAO;AAGrB,aAAOC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AAEzBG,QAAAA,MAAM,EAAEH,IAAI,CAACI,KAAL,IAAc,CAAd,GAAkB,KAAKjB,KAAL,CAAWkB,IAAX,CAAgBL,IAAI,CAACI,KAArB,CAAlB,GAAgD;AAF/B,OAApB,CAAP;AAID;;;qCAEgBhB,Q,EAAUD,K,EAAO;AAAA,UACzB1B,YADyB,GAC6B0B,KAD7B,CACzB1B,YADyB;AAAA,UACXO,YADW,GAC6BmB,KAD7B,CACXnB,YADW;AAAA,UACGL,UADH,GAC6BwB,KAD7B,CACGxB,UADH;AAAA,UACeE,UADf,GAC6BsB,KAD7B,CACetB,UADf;AAAA,UAIzBoB,gBAJyB,GAIL,KAAKF,KAJA,CAIzBE,gBAJyB;AAKhCA,MAAAA,gBAAgB,CAACqB,QAAjB,CACEL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB1E,qBAAlB,EAAyCwC,YAAzC,EAAuD;AACrDP,QAAAA,YAAY,EAAZA,YADqD;AAErDE,QAAAA,UAAU,EAAVA,UAFqD;AAGrDE,QAAAA,UAAU,EAAVA;AAHqD,OAAvD,CADF;AAQA,WAAK0C,cAAL,CAAoB,IAApB;AACD;;;iCAEYnB,Q,EAAUD,K,EAAO;AAC5B,UACEC,QAAQ,CAACzB,UAAT,KAAwBwB,KAAK,CAACxB,UAA9B,IACAyB,QAAQ,CAAC3B,YAAT,KAA0B0B,KAAK,CAAC1B,YADhC,IAEA2B,QAAQ,CAACvB,UAAT,KAAwBsB,KAAK,CAACtB,UAHhC,EAIE;AACA,eAAO,IAAP;AACD;;AAED,UAAIuB,QAAQ,CAACpB,YAAT,KAA0BmB,KAAK,CAACnB,YAApC,EAAkD;AAChD,eAAO,KAAP;AACD;;AAED,UAAMwC,eAAe,GAAGpB,QAAQ,CAACpB,YAAT,IAAyB,EAAjD;AACA,UAAMA,YAAY,GAAGmB,KAAK,CAACnB,YAAN,IAAsB,EAA3C;AAEA,aAAOpB,mBAAmB,CAAC6D,IAApB,CAAyB,UAAAC,IAAI;AAAA,eAAIF,eAAe,CAACE,IAAD,CAAf,KAA0B1C,YAAY,CAAC0C,IAAD,CAA1C;AAAA,OAA7B,CAAP;AACD;;;kCAIa;AAAA,UACLL,IADK,GACG,KAAKlB,KADR,CACLkB,IADK;AAEZ,UAAMM,UAAU,GAAGN,IAAI,CAACO,UAAL,IAAmBP,IAAI,CAACO,UAAL,CAAgBzC,OAAtD;AAFY,UAGPA,OAHO,GAGI,KAAKgB,KAHT,CAGPhB,OAHO;AAAA,UAIP0C,YAJO,GAISR,IAJT,CAIPQ,YAJO;AAKZ,UAAIC,YAAJ;;AAEA,UAAIH,UAAU,IAAIE,YAAlB,EAAgC;AAAA,iCACE,8DAC1BE,WAAW,CAACC,MAAZ,CAAmBL,UAAnB,IAAiC;AAACpD,UAAAA,KAAK,EAAEoD;AAAR,SAAjC,GAAuDA,UAD7B;AAE9BM,UAAAA,MAAM,EAAEZ,IAAI,CAACY,MAFiB;AAG9BJ,UAAAA,YAAY,EAAZA;AAH8B,WADF;AAAA,YACvBK,KADuB,sBACvBA,KADuB;AAAA,YAChBC,cADgB,sBAChBA,cADgB;;AAM9BL,QAAAA,YAAY,GAAGK,cAAf;;AACAhD,QAAAA,OAAO,GAAG,iBAACiD,CAAD;AAAA,cAAKhB,KAAL,SAAKA,KAAL;AAAA,iBAAgBc,KAAK,CAACd,KAAD,CAArB;AAAA,SAAV;AACD,OARD,MAQO;AAAA,8BAC0B,0BAAeC,IAAf,CAD1B;AAAA,YACEgB,QADF,mBACEA,QADF;AAAA,YACYC,UADZ,mBACYA,UADZ;;AAELT,QAAAA,YAAY,GAAG,CAAC,CAAD,CAAf;AACAC,QAAAA,YAAY,GAAG,CAAf;;AAHK,mDAKgBO,QALhB;AAAA;;AAAA;AAKL,8DAA+B;AAAA,gBAApBlB,MAAoB;AAC7BmB,YAAAA,UAAU,CAAClB,KAAX;AACA,gBAAM/B,IAAI,GAAGF,OAAO,CAACgC,MAAD,EAASmB,UAAT,CAAP,IAA+B,EAA5C;AAEAR,YAAAA,YAAY,IAAIS,KAAK,CAACC,IAAN,CAAWnD,IAAX,EAAiB4C,MAAjC;AACAJ,YAAAA,YAAY,CAACY,IAAb,CAAkBX,YAAlB;AACD;AAXI;AAAA;AAAA;AAAA;AAAA;AAYN;;AAED,WAAKf,QAAL,CAAc;AAAC5B,QAAAA,OAAO,EAAPA,OAAD;AAAU0C,QAAAA,YAAY,EAAZA,YAAV;AAAwBC,QAAAA,YAAY,EAAZA;AAAxB,OAAd;AACD;;;mCAGcX,M,EAAQmB,U,EAAY;AACjC,UAAMI,WAAW,GAAG,KAAK3C,KAAL,CAAWE,gBAAX,CAA4B0C,OAAhD;AADiC,UAE1BxD,OAF0B,GAEf,KAAKY,KAFU,CAE1BZ,OAF0B;AAAA,wBAG8C,KAAKgB,KAHnD;AAAA,UAG1BlB,SAH0B,eAG1BA,SAH0B;AAAA,UAGfC,QAHe,eAGfA,QAHe;AAAA,UAGLH,UAHK,eAGLA,UAHK;AAAA,UAGOY,aAHP,eAGOA,aAHP;AAAA,UAGsBC,oBAHtB,eAGsBA,oBAHtB;AAKjC,UAAMgD,SAAS,GAAGzD,OAAO,CAACgC,MAAD,EAASmB,UAAT,CAAP,IAA+B,EAAjD;;AALiC,gCAW7B,+BAAmBM,SAAnB,EAA8B7D,UAA9B,EAA0CE,SAA1C,EAAqDC,QAArD,EAA+DwD,WAA/D,CAX6B;AAAA,UAO/BtD,CAP+B,uBAO/BA,CAP+B;AAAA,UAQ/ByD,CAR+B,uBAQ/BA,CAR+B;AAAA,UAS/BC,QAT+B,uBAS/BA,QAT+B;AAAA,sFAU/BC,IAV+B;AAAA,UAUxBC,KAVwB;AAAA,UAUjBC,MAViB;;AAYjC,UAAMC,OAAO,GACXhG,WAAW,CACT,OAAOyC,aAAP,KAAyB,UAAzB,GAAsCA,aAAa,CAACwB,MAAD,EAASmB,UAAT,CAAnD,GAA0E3C,aADjE,CADb;AAIA,UAAMwD,OAAO,GACX7F,kBAAkB,CAChB,OAAOsC,oBAAP,KAAgC,UAAhC,GACIA,oBAAoB,CAACuB,MAAD,EAASmB,UAAT,CADxB,GAEI1C,oBAHY,CADpB;AAOA,UAAMwD,aAAa,GAAGhE,CAAC,CAAC6C,MAAxB;AACA,UAAMoB,OAAO,GAAG,IAAId,KAAJ,CAAUa,aAAa,GAAG,CAA1B,CAAhB;AACA,UAAIhC,KAAK,GAAG,CAAZ;;AAEA,WAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAApB,EAAmCE,CAAC,EAApC,EAAwC;AAGtC,YAAMC,SAAS,GAAI,CAAC,IAAIL,OAAL,KAAiBF,KAAK,GAAGF,QAAQ,CAACQ,CAAD,CAAjC,CAAD,GAA0C,CAA5D;AACAD,QAAAA,OAAO,CAACjC,KAAK,EAAN,CAAP,GAAoB,CAAC8B,OAAO,GAAG,CAAX,IAAgBF,KAAjB,GAA0B,CAA1B,GAA8BO,SAA9B,GAA0CnE,CAAC,CAACkE,CAAD,CAA9D;AACAD,QAAAA,OAAO,CAACjC,KAAK,EAAN,CAAP,GAAoB,CAAC+B,OAAO,GAAG,CAAX,IAAgBF,MAAjB,GAA2B,CAA3B,GAA+BJ,CAAC,CAACS,CAAD,CAAnD;AACD;;AACD,aAAOD,OAAP;AACD;;;mCAEc;AAAA,wBAOT,KAAKtD,KAPI;AAAA,UAEX8B,YAFW,eAEXA,YAFW;AAAA,UAGXC,YAHW,eAGXA,YAHW;AAAA,UAIX3C,OAJW,eAIXA,OAJW;AAAA,8CAKXc,gBALW;AAAA,UAKQuD,KALR,yBAKQA,KALR;AAAA,UAKeC,OALf,yBAKeA,OALf;AAAA,UAKwBd,OALxB,yBAKwBA,OALxB;AAAA,UAMX3C,YANW,eAMXA,YANW;AAAA,yBA0BT,KAAKG,KA1BI;AAAA,UAUXkB,IAVW,gBAUXA,IAVW;AAAA,UAWXqC,SAXW,gBAWXA,SAXW;AAAA,UAYXrF,eAZW,gBAYXA,eAZW;AAAA,UAaXiB,WAbW,gBAaXA,WAbW;AAAA,UAcXE,QAdW,gBAcXA,QAdW;AAAA,UAeXC,OAfW,gBAeXA,OAfW;AAAA,UAgBXC,QAhBW,gBAgBXA,QAhBW;AAAA,UAiBXG,cAjBW,gBAiBXA,cAjBW;AAAA,UAkBX/B,SAlBW,gBAkBXA,SAlBW;AAAA,UAmBXkB,YAnBW,gBAmBXA,YAnBW;AAAA,UAoBXjB,SApBW,gBAoBXA,SApBW;AAAA,UAqBXC,SArBW,gBAqBXA,SArBW;AAAA,UAsBXC,aAtBW,gBAsBXA,aAtBW;AAAA,UAuBXC,aAvBW,gBAuBXA,aAvBW;AAAA,UAwBXyF,WAxBW,gBAwBXA,WAxBW;AAAA,UAyBXC,cAzBW,gBAyBXA,cAzBW;AA4Bb,UAAMC,cAAc,GAAG,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAvB;AAEA,UAAMC,aAAa,GAAG,KAAKC,gBAAL,CAAsB,YAAtB,EAAoCC,0BAApC,CAAtB;AAEA,aAAO,IAAIF,aAAJ,CACL;AACElH,QAAAA,GAAG,EAAEmC,YAAY,CAACnC,GADpB;AAEEqH,QAAAA,SAAS,EAAET,OAFb;AAGEf,QAAAA,WAAW,EAAEC,OAHf;AAIEtE,QAAAA,eAAe,EAAfA,eAJF;AAMEiB,QAAAA,WAAW,EAAXA,WANF;AAOEE,QAAAA,QAAQ,EAARA,QAPF;AAQEC,QAAAA,OAAO,EAAPA,OARF;AASEC,QAAAA,QAAQ,EAARA,QATF;AAUEG,QAAAA,cAAc,EAAdA,cAVF;AAYE/B,QAAAA,SAAS,EAATA,SAZF;AAaEC,QAAAA,SAAS,EAAEA,SAAS,GAAGyF,KAbzB;AAcExF,QAAAA,SAAS,EAATA,SAdF;AAeEC,QAAAA,aAAa,EAAEA,aAAa,GAAGuF,KAfjC;AAgBEtF,QAAAA,aAAa,EAAEA,aAAa,GAAGsF,KAhBjC;AAkBEG,QAAAA,WAAW,EAAEA,WAAW,IAAI;AAC1BrE,UAAAA,WAAW,EAAEqE,WAAW,CAACrE,WADC;AAE1BI,UAAAA,QAAQ,EAAEiE,WAAW,CAACjE,QAFI;AAG1BF,UAAAA,QAAQ,EAAEmE,WAAW,CAACnE,QAHI;AAI1BC,UAAAA,OAAO,EAAEkE,WAAW,CAAClE,OAJK;AAK1BI,UAAAA,cAAc,EAAE8D,WAAW,CAAC9D;AALF;AAlB9B,OADK,EA2BL,KAAKsE,gBAAL,CAAsB;AACpBC,QAAAA,EAAE,EAAE,YADgB;AAEpBR,QAAAA,cAAc,EAAE;AACdS,UAAAA,OAAO,EAAET,cAAc,CAACzE,OADV;AAEdG,UAAAA,WAAW,EAAEsE,cAAc,CAACtE,WAFd;AAGdI,UAAAA,QAAQ,EAAEkE,cAAc,CAAClE,QAHX;AAIdF,UAAAA,QAAQ,EAAEoE,cAAc,CAACpE,QAJX;AAKdC,UAAAA,OAAO,EAAEmE,cAAc,CAACnE,OALV;AAMdI,UAAAA,cAAc,EAAE+D,cAAc,CAAC/D,cANjB;AAOdgE,UAAAA,cAAc,EAAE;AACd1E,YAAAA,OAAO,EAAEyE,cAAc,CAACzE,OADV;AAEdQ,YAAAA,aAAa,EAAEiE,cAAc,CAACjE,aAFhB;AAGdC,YAAAA,oBAAoB,EAAEgE,cAAc,CAAChE,oBAHvB;AAIdI,YAAAA,YAAY,EAAZA;AAJc;AAPF;AAFI,OAAtB,CA3BK,EA4CL;AACEqB,QAAAA,IAAI,EAAJA,IADF;AAEEqC,QAAAA,SAAS,EAATA,SAFF;AAGE7B,QAAAA,YAAY,EAAZA,YAHF;AAIEC,QAAAA,YAAY,EAAZA,YAJF;AAKE+B,QAAAA,cAAc,EAAdA,cALF;AAMEQ,QAAAA,OAAO,EAAElF;AANX,OA5CK,CAAP;AAqDD;;;EA9OoCmF,oB;;;AAiPvCxE,SAAS,CAACyE,SAAV,GAAsB,WAAtB;AACAzE,SAAS,CAACjC,YAAV,GAAyBA,YAAzB","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, createIterable} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, {\n  DEFAULT_CHAR_SET,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_WEIGHT,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_BUFFER,\n  DEFAULT_RADIUS,\n  DEFAULT_CUTOFF\n} from './font-atlas-manager';\nimport {transformParagraph, getTextFromBuffer} from './utils';\n\nconst DEFAULT_FONT_SETTINGS = {\n  fontSize: DEFAULT_FONT_SIZE,\n  buffer: DEFAULT_BUFFER,\n  sdf: false,\n  radius: DEFAULT_RADIUS,\n  cutoff: DEFAULT_CUTOFF\n};\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst DEFAULT_LINE_HEIGHT = 1.0;\n\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\n\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  backgroundColor: {type: 'color', value: null, optional: true},\n\n  characterSet: DEFAULT_CHAR_SET,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  lineHeight: DEFAULT_LINE_HEIGHT,\n  fontSettings: {},\n\n  // auto wrapping options\n  wordBreak: 'break-word',\n  maxWidth: {type: 'number', value: -1},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]}\n};\n\nexport default class TextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      styleVersion: 0,\n      fontAtlasManager: new FontAtlasManager()\n    };\n  }\n\n  // eslint-disable-next-line complexity\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged = this._fontChanged(oldProps, props);\n\n    if (fontChanged) {\n      this._updateFontAtlas(oldProps, props);\n    }\n\n    const styleChanged =\n      fontChanged ||\n      props.lineHeight !== oldProps.lineHeight ||\n      props.wordBreak !== oldProps.wordBreak ||\n      props.maxWidth !== oldProps.maxWidth;\n\n    const textChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText));\n\n    if (textChanged) {\n      this._updateText();\n    }\n    if (styleChanged) {\n      this.setState({\n        styleVersion: this.state.styleVersion + 1\n      });\n    }\n  }\n\n  getPickingInfo({info}) {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    return Object.assign(info, {\n      // override object with original data\n      object: info.index >= 0 ? this.props.data[info.index] : null\n    });\n  }\n\n  _updateFontAtlas(oldProps, props) {\n    const {characterSet, fontSettings, fontFamily, fontWeight} = props;\n\n    // generate test characterSet\n    const {fontAtlasManager} = this.state;\n    fontAtlasManager.setProps(\n      Object.assign({}, DEFAULT_FONT_SETTINGS, fontSettings, {\n        characterSet,\n        fontFamily,\n        fontWeight\n      })\n    );\n\n    this.setNeedsRedraw(true);\n  }\n\n  _fontChanged(oldProps, props) {\n    if (\n      oldProps.fontFamily !== props.fontFamily ||\n      oldProps.characterSet !== props.characterSet ||\n      oldProps.fontWeight !== props.fontWeight\n    ) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  // Text strings are variable width objects\n  // Returns the index at the start of each string (every character is rendered by one instance)\n  _updateText() {\n    const {data} = this.props;\n    const textBuffer = data.attributes && data.attributes.getText;\n    let {getText} = this.props;\n    let {startIndices} = data;\n    let numInstances;\n\n    if (textBuffer && startIndices) {\n      const {texts, characterCount} = getTextFromBuffer({\n        ...(ArrayBuffer.isView(textBuffer) ? {value: textBuffer} : textBuffer),\n        length: data.length,\n        startIndices\n      });\n      numInstances = characterCount;\n      getText = (_, {index}) => texts[index];\n    } else {\n      const {iterable, objectInfo} = createIterable(data);\n      startIndices = [0];\n      numInstances = 0;\n\n      for (const object of iterable) {\n        objectInfo.index++;\n        const text = getText(object, objectInfo) || '';\n        // When dealing with double-length unicode characters, `str.length` is incorrect\n        numInstances += Array.from(text).length;\n        startIndices.push(numInstances);\n      }\n    }\n\n    this.setState({getText, startIndices, numInstances});\n  }\n\n  // Returns the x, y offsets of each character in a text string\n  getIconOffsets(object, objectInfo) {\n    const iconMapping = this.state.fontAtlasManager.mapping;\n    const {getText} = this.state;\n    const {wordBreak, maxWidth, lineHeight, getTextAnchor, getAlignmentBaseline} = this.props;\n\n    const paragraph = getText(object, objectInfo) || '';\n    const {\n      x,\n      y,\n      rowWidth,\n      size: [width, height]\n    } = transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping);\n    const anchorX =\n      TEXT_ANCHOR[\n        typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor\n      ];\n    const anchorY =\n      ALIGNMENT_BASELINE[\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(object, objectInfo)\n          : getAlignmentBaseline\n      ];\n\n    const numCharacters = x.length;\n    const offsets = new Array(numCharacters * 2);\n    let index = 0;\n\n    for (let i = 0; i < numCharacters; i++) {\n      // For a multi-line object, offset in x-direction needs consider\n      // the row offset in the paragraph and the object offset in the row\n      const rowOffset = ((1 - anchorX) * (width - rowWidth[i])) / 2;\n      offsets[index++] = ((anchorX - 1) * width) / 2 + rowOffset + x[i];\n      offsets[index++] = ((anchorY - 1) * height) / 2 + y[i];\n    }\n    return offsets;\n  }\n\n  renderLayers() {\n    const {\n      startIndices,\n      numInstances,\n      getText,\n      fontAtlasManager: {scale, texture, mapping},\n      styleVersion\n    } = this.state;\n\n    const {\n      data,\n      _dataDiff,\n      backgroundColor,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      billboard,\n      fontSettings,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const getIconOffsets = this.getIconOffsets.bind(this);\n\n    const SubLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n\n    return new SubLayerClass(\n      {\n        sdf: fontSettings.sdf,\n        iconAtlas: texture,\n        iconMapping: mapping,\n        backgroundColor,\n\n        getPosition,\n        getColor,\n        getSize,\n        getAngle,\n        getPixelOffset,\n\n        billboard,\n        sizeScale: sizeScale * scale,\n        sizeUnits,\n        sizeMinPixels: sizeMinPixels * scale,\n        sizeMaxPixels: sizeMaxPixels * scale,\n\n        transitions: transitions && {\n          getPosition: transitions.getPosition,\n          getAngle: transitions.getAngle,\n          getColor: transitions.getColor,\n          getSize: transitions.getSize,\n          getPixelOffset: transitions.getPixelOffset\n        }\n      },\n      this.getSubLayerProps({\n        id: 'characters',\n        updateTriggers: {\n          getIcon: updateTriggers.getText,\n          getPosition: updateTriggers.getPosition,\n          getAngle: updateTriggers.getAngle,\n          getColor: updateTriggers.getColor,\n          getSize: updateTriggers.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset,\n          getIconOffsets: {\n            getText: updateTriggers.getText,\n            getTextAnchor: updateTriggers.getTextAnchor,\n            getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n            styleVersion\n          }\n        }\n      }),\n      {\n        data,\n        _dataDiff,\n        startIndices,\n        numInstances,\n        getIconOffsets,\n        getIcon: getText\n      }\n    );\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}