{"version":3,"sources":["../../../src/tile-layer/tile-layer.js"],"names":["CompositeLayer","_flatten","flatten","GeoJsonLayer","load","Tileset2D","STRATEGY_DEFAULT","urlType","getURLFromTemplate","defaultProps","data","dataComparator","equals","renderSubLayers","type","value","props","compare","getTileData","optional","onViewportLoad","onTileLoad","tile","onTileUnload","onTileError","err","console","error","extent","tileSize","maxZoom","minZoom","maxCacheSize","maxCacheByteSize","refinementStrategy","zRange","fetch","url","layer","signal","loadOptions","getLoadOptions","maxRequests","TileLayer","state","tileset","isLoaded","finalize","changeFlags","somethingChanged","oldProps","context","createTileCache","dataChanged","updateTriggersChanged","all","Number","isFinite","bind","_onTileLoad","_onTileError","_onTileUnload","setState","propsChanged","setOptions","tiles","forEach","layers","_updateTileset","modelMatrix","frameNumber","update","viewport","loadingStateChanged","tilesetChanged","_onViewportLoad","selectedTiles","getCurrentLayer","isVisible","setNeedsUpdate","info","sourceLayer","visible","map","highlightedObjectIndex","getHighlightedObjectIndex","Object","assign","id","x","y","z","_offset","Boolean","clone","every","layerName"],"mappings":"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","sourcesContent":["import {CompositeLayer, _flatten as flatten} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {load} from '@loaders.gl/core';\n\nimport Tileset2D, {STRATEGY_DEFAULT} from './tileset-2d';\nimport {urlType, getURLFromTemplate} from './utils';\n\nconst defaultProps = {\n  data: [],\n  dataComparator: urlType.equals,\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props), compare: false},\n  getTileData: {type: 'function', optional: true, value: null, compare: false},\n  // TODO - change to onViewportLoad to align with Tile3DLayer\n  onViewportLoad: {type: 'function', optional: true, value: null, compare: false},\n  onTileLoad: {type: 'function', value: tile => {}, compare: false},\n  onTileUnload: {type: 'function', value: tile => {}, compare: false},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err), compare: false},\n  extent: {type: 'array', optional: true, value: null, compare: true},\n  tileSize: 512,\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: STRATEGY_DEFAULT,\n  zRange: null,\n  // Use load directly so we don't use ResourceManager\n  fetch: {\n    type: 'function',\n    value: (url, {layer, signal}) => {\n      const loadOptions = {...layer.getLoadOptions()};\n      loadOptions.fetch = {\n        ...loadOptions.fetch,\n        signal\n      };\n\n      return load(url, loadOptions);\n    },\n    compare: false\n  },\n  maxRequests: 6\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      tileset: null,\n      isLoaded: false\n    };\n  }\n\n  finalizeState() {\n    const {tileset} = this.state;\n    if (tileset) {\n      tileset.finalize();\n    }\n  }\n\n  get isLoaded() {\n    const {tileset} = this.state;\n    return tileset.selectedTiles.every(\n      tile => tile.layers && tile.layers.every(layer => layer.isLoaded)\n    );\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    let {tileset} = this.state;\n    const createTileCache =\n      !tileset ||\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData));\n\n    if (createTileCache) {\n      if (tileset) {\n        tileset.finalize();\n      }\n      const maxZoom = Number.isFinite(this.state.maxZoom) ? this.state.maxZoom : props.maxZoom;\n      const minZoom = Number.isFinite(this.state.minZoom) ? this.state.minZoom : props.minZoom;\n      const {\n        tileSize,\n        maxCacheSize,\n        maxCacheByteSize,\n        refinementStrategy,\n        extent,\n        maxRequests\n      } = props;\n      tileset = new Tileset2D({\n        getTileData: this.getTileData.bind(this),\n        maxCacheSize,\n        maxCacheByteSize,\n        maxZoom,\n        minZoom,\n        tileSize,\n        refinementStrategy,\n        extent,\n        onTileLoad: this._onTileLoad.bind(this),\n        onTileError: this._onTileError.bind(this),\n        onTileUnload: this._onTileUnload.bind(this),\n        maxRequests\n      });\n      this.setState({tileset});\n    } else if (changeFlags.propsChanged || changeFlags.updateTriggersChanged) {\n      tileset.setOptions(props);\n      // if any props changed, delete the cached layers\n      this.state.tileset.tiles.forEach(tile => {\n        tile.layers = null;\n      });\n    }\n\n    this._updateTileset();\n  }\n\n  _updateTileset() {\n    const {tileset} = this.state;\n    const {zRange, modelMatrix} = this.props;\n    const frameNumber = tileset.update(this.context.viewport, {zRange, modelMatrix});\n    const {isLoaded} = tileset;\n\n    const loadingStateChanged = this.state.isLoaded !== isLoaded;\n    const tilesetChanged = this.state.frameNumber !== frameNumber;\n\n    if (isLoaded && (loadingStateChanged || tilesetChanged)) {\n      this._onViewportLoad();\n    }\n\n    if (tilesetChanged) {\n      // Save the tileset frame number - trigger a rerender\n      this.setState({frameNumber});\n    }\n    // Save the loaded state - should not trigger a rerender\n    this.state.isLoaded = isLoaded;\n  }\n\n  _onViewportLoad() {\n    const {tileset} = this.state;\n    const {onViewportLoad} = this.props;\n\n    if (onViewportLoad) {\n      onViewportLoad(tileset.selectedTiles);\n    }\n  }\n\n  _onTileLoad(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileLoad(tile);\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileError(error, tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileError(error);\n    // errorred tiles should not block rendering, are considered \"loaded\" with empty data\n    layer._updateTileset();\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileUnload(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileUnload(tile);\n  }\n\n  // Methods for subclass to override\n\n  getTileData(tile) {\n    const {data} = this.props;\n    const {getTileData, fetch} = this.getCurrentLayer().props;\n    const {signal} = tile;\n\n    tile.url = getURLFromTemplate(data, tile);\n\n    if (getTileData) {\n      return getTileData(tile);\n    }\n    if (tile.url) {\n      return fetch(tile.url, {layer: this, signal});\n    }\n    return null;\n  }\n\n  renderSubLayers(props) {\n    return this.props.renderSubLayers(props);\n  }\n\n  getHighlightedObjectIndex() {\n    return -1;\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.sourceLayer = sourceLayer;\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  renderLayers() {\n    const {visible} = this.props;\n    return this.state.tileset.tiles.map(tile => {\n      // For a tile to be visible:\n      // - parent layer must be visible\n      // - tile must be visible in the current viewport\n      const isVisible = visible && tile.isVisible;\n      const highlightedObjectIndex = this.getHighlightedObjectIndex(tile);\n      // cache the rendered layer in the tile\n      if (!tile.isLoaded) {\n        // no op\n      } else if (!tile.layers) {\n        const layers = this.renderSubLayers(\n          Object.assign({}, this.props, {\n            id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n            data: tile.data,\n            visible: isVisible,\n            _offset: 0,\n            tile,\n            highlightedObjectIndex\n          })\n        );\n        tile.layers = flatten(layers, Boolean);\n      } else if (\n        tile.layers[0] &&\n        (tile.layers[0].props.visible !== isVisible ||\n          tile.layers[0].props.highlightedObjectIndex !== highlightedObjectIndex)\n      ) {\n        tile.layers = tile.layers.map(layer =>\n          layer.clone({visible: isVisible, highlightedObjectIndex})\n        );\n      }\n      return tile.layers;\n    });\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n"],"file":"tile-layer.js"}