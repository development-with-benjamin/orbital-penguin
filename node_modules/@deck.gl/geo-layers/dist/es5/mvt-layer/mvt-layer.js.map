{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.js"],"names":["WORLD_SIZE","defaultProps","uniqueIdProperty","type","value","highlightedFeatureId","loaders","MVTLoader","binary","fetchTileJSON","url","Error","MVTLayer","setState","data","tileJSON","props","oldProps","context","changeFlags","dataChanged","_updateTileData","state","_setWGS84PropertyForTiles","onDataLoad","minZoom","maxZoom","tilejson","tiles","Number","isFinite","minzoom","maxzoom","tile","Promise","reject","options","getLoadOptions","mvt","coordinates","viewport","resolution","tileIndex","x","y","z","gis","format","worldScale","Math","pow","xScale","yScale","xOffset","yOffset","modelMatrix","Matrix4","scale","autoHighlight","coordinateOrigin","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","extensions","ClipExtension","info","pickingEvent","hoveredFeatureId","hoveredFeature","object","newHoveredFeatureId","getFeatureUniqueId","params","isWGS84","transformTileCoordsToWGS84","bbox","index","sourceLayer","points","lines","polygons","isFeatureIdPresent","isFeatureIdDefined","featureIdToHighlight","Array","isArray","findIndex","feature","featureIdIndex","geometries","geometry","featureIds","undefined","maxObjects","deck","width","height","layerIds","id","pickObjects","maxFeatures","features","_pickObjects","featureCache","Set","renderedFeatures","f","featureId","push","has","add","propName","tileset","selectedTiles","forEach","hasOwnProperty","Object","defineProperty","get","content","length","_contentWGS84","map","TileLayer","properties","wgs84Geom","layerName"],"mappings":"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","sourcesContent":["import {Matrix4} from 'math.gl';\nimport {MVTLoader} from '@loaders.gl/mvt';\nimport {binaryToGeoJson} from '@loaders.gl/gis';\nimport {load} from '@loaders.gl/core';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\nimport {_binaryToFeature, _findIndexBinary} from '@deck.gl/layers';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate, isURLTemplate} from '../tile-layer/utils';\nimport ClipExtension from './clip-extension';\nimport {transform} from './coordinate-transform';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps = {\n  uniqueIdProperty: {type: 'string', value: ''},\n  highlightedFeatureId: null,\n  loaders: [MVTLoader],\n  binary: false\n};\n\nasync function fetchTileJSON(url) {\n  try {\n    return await load(url);\n  } catch (error) {\n    throw new Error(`An error occurred fetching TileJSON: ${error}`);\n  }\n}\n\nexport default class MVTLayer extends TileLayer {\n  initializeState() {\n    super.initializeState();\n    this.setState({\n      data: null,\n      tileJSON: null\n    });\n  }\n\n  get isLoaded() {\n    return this.state.data && this.state.tileset && super.isLoaded;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    if (changeFlags.dataChanged) {\n      this._updateTileData({props});\n    }\n\n    if (this.state.data) {\n      super.updateState({props, oldProps, context, changeFlags});\n      this._setWGS84PropertyForTiles();\n    }\n  }\n\n  async _updateTileData({props}) {\n    const {onDataLoad} = this.props;\n    let {data} = props;\n    let tileJSON = null;\n    let {minZoom, maxZoom} = props;\n\n    if (typeof data === 'string' && !isURLTemplate(data)) {\n      this.setState({data: null, tileJSON: null});\n      tileJSON = await fetchTileJSON(data);\n\n      if (onDataLoad) {\n        onDataLoad(tileJSON);\n      }\n    } else if (data.tilejson) {\n      tileJSON = data;\n    }\n\n    if (tileJSON) {\n      data = tileJSON.tiles;\n\n      if (Number.isFinite(tileJSON.minzoom) && tileJSON.minzoom > minZoom) {\n        minZoom = tileJSON.minzoom;\n      }\n\n      if (\n        Number.isFinite(tileJSON.maxzoom) &&\n        (!Number.isFinite(maxZoom) || tileJSON.maxzoom < maxZoom)\n      ) {\n        maxZoom = tileJSON.maxzoom;\n      }\n    }\n\n    this.setState({data, tileJSON, minZoom, maxZoom});\n  }\n\n  renderLayers() {\n    if (!this.state.data) return null;\n    return super.renderLayers();\n  }\n\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.state.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let options = this.getLoadOptions();\n    options = {\n      ...options,\n      mvt: {\n        ...(options && options.mvt),\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: {x: tile.x, y: tile.y, z: tile.z}\n        // Local worker debug\n        // workerUrl: `modules/mvt/dist/mvt-loader.worker.js`\n        // Set worker to null to skip web workers\n        // workerUrl: null\n      },\n      gis: this.props.binary ? {format: 'binary'} : {}\n    };\n    return load(url, this.props.loaders[0], options);\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    return super.renderSubLayers(props);\n  }\n\n  onHover(info, pickingEvent) {\n    const {uniqueIdProperty, autoHighlight} = this.props;\n\n    if (autoHighlight) {\n      const {hoveredFeatureId} = this.state;\n      const hoveredFeature = info.object;\n      let newHoveredFeatureId;\n\n      if (hoveredFeature) {\n        newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      }\n\n      if (hoveredFeatureId !== newHoveredFeatureId && newHoveredFeatureId !== -1) {\n        this.setState({hoveredFeatureId: newHoveredFeatureId});\n      }\n    }\n\n    return super.onHover(info, pickingEvent);\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n\n    const isWGS84 = this.context.viewport.resolution;\n\n    if (info.object && !isWGS84) {\n      info.object = transformTileCoordsToWGS84(info.object, info.tile.bbox, this.context.viewport);\n    } else if (this.props.binary && info.index !== -1) {\n      // get the feature from the binary at the given index.\n      const {data} = params.sourceLayer.props;\n      info.object =\n        _binaryToFeature(data.points, info.index) ||\n        _binaryToFeature(data.lines, info.index) ||\n        _binaryToFeature(data.polygons, info.index);\n    }\n\n    return info;\n  }\n\n  getHighlightedObjectIndex(tile) {\n    const {hoveredFeatureId} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId, binary} = this.props;\n    const {data} = tile;\n\n    const isFeatureIdPresent =\n      isFeatureIdDefined(hoveredFeatureId) || isFeatureIdDefined(highlightedFeatureId);\n\n    if (!isFeatureIdPresent) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isFeatureIdDefined(highlightedFeatureId)\n      ? highlightedFeatureId\n      : hoveredFeatureId;\n\n    // Iterable data\n    if (Array.isArray(data)) {\n      return data.findIndex(\n        feature => getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight\n      );\n\n      // Non-iterable data\n    } else if (data && binary) {\n      // Get the feature index of the selected item to highlight\n      const featureIdIndex = _findIndexBinary(data, uniqueIdProperty, featureIdToHighlight);\n\n      const geometries = ['points', 'lines', 'polygons'];\n      for (const geometry of geometries) {\n        const index = data[geometry] && data[geometry].featureIds.value[featureIdIndex];\n        if (index !== undefined) return index;\n      }\n    }\n\n    return -1;\n  }\n\n  _pickObjects(maxObjects) {\n    const {deck, viewport} = this.context;\n    const width = viewport.width;\n    const height = viewport.height;\n    const x = viewport.x;\n    const y = viewport.y;\n    const layerIds = [this.id];\n    return deck.pickObjects({x, y, width, height, layerIds, maxObjects});\n  }\n\n  getRenderedFeatures(maxFeatures = null) {\n    const features = this._pickObjects(maxFeatures);\n    const featureCache = new Set();\n    const renderedFeatures = [];\n\n    for (const f of features) {\n      const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n\n      if (featureId === -1) {\n        // we have no id for the feature, we just add to the list\n        renderedFeatures.push(f.object);\n      } else if (!featureCache.has(featureId)) {\n        // Add removing duplicates\n        featureCache.add(featureId);\n        renderedFeatures.push(f.object);\n      }\n    }\n\n    return renderedFeatures;\n  }\n\n  _setWGS84PropertyForTiles() {\n    const propName = 'dataInWGS84';\n    const {tileset} = this.state;\n\n    tileset.selectedTiles.forEach(tile => {\n      if (!tile.hasOwnProperty(propName)) {\n        // eslint-disable-next-line accessor-pairs\n        Object.defineProperty(tile, propName, {\n          get: () => {\n            // Still loading or encountered an error\n            if (!tile.content) {\n              return null;\n            }\n\n            if (this.props.binary && Array.isArray(tile.content) && !tile.content.length) {\n              // TODO: @loaders.gl/mvt returns [] when no content. It should return a valid empty binary.\n              // https://github.com/visgl/loaders.gl/pull/1137\n              return [];\n            }\n\n            if (tile._contentWGS84 === undefined) {\n              // Create a cache to transform only once\n              const content = this.props.binary ? binaryToGeoJson(tile.content) : tile.content;\n              tile._contentWGS84 = content.map(feature =>\n                transformTileCoordsToWGS84(feature, tile.bbox, this.context.viewport)\n              );\n            }\n            return tile._contentWGS84;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction getFeatureUniqueId(feature, uniqueIdProperty) {\n  if (uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return -1;\n}\n\nfunction isFeatureIdDefined(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\nfunction transformTileCoordsToWGS84(object, bbox, viewport) {\n  const feature = {\n    ...object,\n    geometry: {\n      type: object.geometry.type\n    }\n  };\n\n  // eslint-disable-next-line accessor-pairs\n  Object.defineProperty(feature.geometry, 'coordinates', {\n    get: () => {\n      const wgs84Geom = transform(object.geometry, bbox, viewport);\n      return wgs84Geom.coordinates;\n    }\n  });\n\n  return feature;\n}\n\nMVTLayer.layerName = 'MVTLayer';\nMVTLayer.defaultProps = defaultProps;\n"],"file":"mvt-layer.js"}